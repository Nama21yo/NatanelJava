There are two important things to notice about this program. First, as explained, inside 
vaTest( ), v is operated on as an array. This is because v is an array. The … syntax simply tells 
the compiler that a variable number of arguments will be used, and that these arguments will be stored in the array referred to by v. Second, in main( ), vaTest( ) is called with different 
numbers of arguments, including no arguments at all. The arguments are automatically put 
in an array and passed to v. In the case of no arguments, the length of the array is zero.

//
A method can have “normal” parameters along with a variable-length parameter. However, 
the variable-length parameter must be the last parameter declared by the method. For example, 
this method declaration is perfectly acceptable:
int doIt(int a, int b, double c, int ... vals) {
In this case, the first three arguments used in a call to doIt( ) are matched to the first three 
parameters. Then, any remaining arguments are assumed to belong to vals.
Remember, the varargs parameter must be last. For example, the following declaration 
is incorrect:
int doIt(int a, int b, double c, int ... vals, boolean stopFlag) { // Error!
Here, there is an attempt to declare a regular parameter after the varargs parameter, which 
is illegal.
//
There is one more restriction to be aware of: there must be only one varargs parameter. 
For example, this declaration is also invalid:
int doIt(int a, int b, double c, int ... vals, double ... morevals) { // Error!
The attempt to declare the second varargs parameter is illegal
//
You can overload a method that takes a variable-length argument. For example, the following 
program overloads vaTest( ) three times:
// Varargs and overloading.
class VarArgs3 {
 static void vaTest(int ... v) {
 System.out.print("vaTest(int ...): " +
 "Number of args: " + v.length +
 " Contents: ");
 for(int x : v)
 System.out.print(x + " ");
 System.out.println();
 }
 static void vaTest(boolean ... v) {
 System.out.print("vaTest(boolean ...) " +
 "Number of args: " + v.length +
 " Contents: ");
 for(boolean x : v)
 System.out.print(x + " ");
 System.out.println();
 }
 static void vaTest(String msg, int ... v) {
 System.out.print("vaTest(String, int ...): " +
 msg + v.length +
 " Contents: ");
 for(int x : v)
 System.out.print(x + " ");
 System.out.println();
 }
 public static void main(String[] args)
 {
 vaTest(1, 2, 3);
 vaTest("Testing: ", 10, 20);
 vaTest(true, false, false);
 }
}
The output produced by this program is shown here:
 vaTest(int ...): Number of args: 3 Contents: 1 2 3
 vaTest(String, int ...): Testing: 2 Contents: 10 20
 vaTest(boolean ...) Number of args: 3 Contents: true false false
//